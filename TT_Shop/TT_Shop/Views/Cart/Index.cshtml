@model IEnumerable<TT_Shop.Models.CartItem>

@{
    ViewBag.Title = "Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="cart-container">
    <h2>Giỏ hàng</h2>

    <table class="cart-table">
        <tr>
            <th class="select-column">Chọn mua</th>
            <th>Hình ảnh</th>
            <th>Sản phẩm</th>
            <th>Giá</th>
            <th>Số lượng</th>
            <th>Tổng</th>
            <th>Hành động</th>
        </tr>
        @foreach (var item in Model.Reverse())
        {
            <tr>
                <td class="select-column">
                    <input type="checkbox" name="selectedProducts" value="@item.IdSanPham" class="round-checkbox" data-price="@item.Gia" data-quantity="@item.SoLuong" onchange="calculateTotal()" />
                </td>
                <td>
                    <img src="@Url.Content("~/Images/Images/" + item.ImageUrl)" alt="@item.TenSanPham" class="product-image" />
                </td>
                <td>@item.TenSanPham</td>
                <td>@String.Format("{0:N0}", item.Gia)</td>
                <td>
                    <input type="number" value="@item.SoLuong" min="1" onchange="updateQuantity(@item.IdSanPham, this.value)" data-id="@item.IdSanPham" class="quantity-input" />
                </td>
                <td>@String.Format("{0:N0}", item.Gia * item.SoLuong)</td>
                <td>
                    @using (Html.BeginForm("XoaGioHang", "Cart", FormMethod.Post, new { id = "deleteForm-" + @item.IdSanPham }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="iMaSach" value="@item.IdSanPham" />
                        <button type="submit" onclick="deleteCartItem(@item.IdSanPham); return false;">Xóa</button>
                    }
                </td>
            </tr>
        }
    </table>

    <div class="cart-total">
        <span>Tổng tiền: </span>
        <span id="totalPrice">0 VND</span>
    </div>

    <div class="cart-actions">
        @using (Html.BeginForm("XoaHetGioHang", "Cart", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger">Xóa hết giỏ hàng</button>
        }
        <a href="@Url.Action("Payment", "Cart")" class="btn btn-success">Thanh toán</a>
    </div>
</div>

<script src="~/Scripts/cart.js"></script>

<style>
    .cart-container {
        border: 1px solid #ccc;
        padding: 20px;
        border-radius: 5px;
        background-color: #f9f9f9;
        margin-top: 20px;
    }

    .cart-table th, .cart-table td {
        padding: 10px;
    }

        .cart-table th.select-column, .cart-table td.select-column {
            border-right: 1px solid #ccc;
        }

    .cart-total {
        margin-top: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .cart-actions {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 20px;
    }

    .product-image {
        width: 50px;
        height: 50px;
        object-fit: cover;
    }

    .round-checkbox {
        width: 20px;
        height: 20px;
        border-radius: 50%;
        vertical-align: middle;
    }
</style>

@section Scripts {
    <script>
        function deleteCartItem(productId) {
            var form = $('#deleteForm-' + productId);
            $.ajax({
                url: form.attr('action'),
                type: 'POST',
                data: form.serialize(),
                success: function (response) {
                    if (response.success) {
                        // Thông báo thành công
                        showNotification('Sản phẩm đã được xóa khỏi giỏ hàng thành công.');
                        // Tùy chọn: xóa sản phẩm khỏi DOM hoặc làm mới giỏ hàng
                        form.closest('tr').remove();
                    } else {
                        // Thông báo lỗi
                        showNotification('Không thể xóa sản phẩm khỏi giỏ hàng.');
                    }
                },
                error: function () {
                    // Thông báo lỗi hệ thống
                    showNotification('Đã xảy ra lỗi khi xóa sản phẩm.');
                }
            });
        }

        function showNotification(message) {
            var notification = $('<div class="notification"></div>').text(message);
            $('body').append(notification);
            notification.fadeIn().delay(2000).fadeOut(function () {
                $(this).remove();
            });
        }

        // Thêm một số kiểu dáng cơ bản cho thông báo
        $('<style>')
            .prop('type', 'text/css')
            .html(`
                    .notification {
                        position: fixed;
                        top: 20px;
                        right: 20px;
                        background-color: #4caf50;
                        color: white;
                        padding: 10px;
                        border-radius: 5px;
                        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
                        display: none;
                        z-index: 1000;
                    }
                `)
            .appendTo('head');
    </script>

}

